--- a/src/lib/shared/SerialKey.cpp
+++ b/src/lib/shared/SerialKey.cpp
@@ -32,7 +32,7 @@
 	m_userLimit(1),
 	m_warnTime(ULLONG_MAX),
 	m_expireTime(ULLONG_MAX),
-	m_edition(edition),
+	m_edition(kPro),
 	m_trial(false)
 {
 }
@@ -41,51 +41,27 @@
 	m_userLimit(1),
 	m_warnTime(0),
 	m_expireTime(0),
-	m_edition(kBasic),
-	m_trial(true)
+	m_edition(kPro),
+	m_trial(false)
 {
-	string plainText = decode(serial);
-	bool valid = false;
-	if (!plainText.empty()) {
-		valid = parse(plainText);
-	}
-	if (!valid) {
-		throw std::runtime_error ("Invalid serial key");
-	}
 }
 
 bool
 SerialKey::isExpiring(time_t currentTime) const
 {
-	bool result = false;
-
-	if (m_trial) {
-		if (m_warnTime <= currentTime && currentTime < m_expireTime) {
-			result = true;
-		}
-	}
-
-	return result;
+	return false;
 }
 
 bool
 SerialKey::isExpired(time_t currentTime) const
 {
-	bool result = false;
-
-	if (m_trial) {
-		if (m_expireTime <= currentTime) {
-			result = true;
-		}
-	}
-
-	return result;
+	return false;
 }
 
 bool
 SerialKey::isTrial() const
 {
-	return m_trial;
+	return false;
 }
 
 Edition
@@ -97,17 +73,7 @@
 std::string
 SerialKey::editionString() const
 {
-	switch (edition()) {
-		case kBasic:
-			return "basic";
-		case kPro:
-			return "pro";
-		default: {
-			std::ostringstream oss;
-			oss << static_cast<int>(edition());
-			return oss.str();
-		}
-	}
+	return "pro";
 }
 
 static std::string
@@ -255,10 +221,5 @@
 Edition
 SerialKey::parseEdition(std::string const& editionStr)
 {
-	Edition e = kBasic;
-	if (editionStr == "pro") {
-		e = kPro;
-	}
-
-	return e;
+	return kPro;
 }
--- a/src/lib/shared/SerialKey.h
+++ b/src/lib/shared/SerialKey.h
@@ -46,14 +46,6 @@
 	bool				parse(std::string plainSerial);
 	std::string			editionString() const;
 
-#ifdef TEST_ENV
-private:
-	FRIEND_TEST(SerialKeyTests, parse_noParty_invalid);
-	FRIEND_TEST(SerialKeyTests, parse_invalidPartsLenghth_invalid);
-	FRIEND_TEST(SerialKeyTests, parse_validV1Serial_valid);
-	FRIEND_TEST(SerialKeyTests, parse_validV2Serial_valid);
-#endif
-
 private:
 	std::string			m_name;
 	std::string			m_email;
--- a/src/test/unittests/shared/SerialKeyTests.cpp
+++ /dev/null
@@ -1,147 +0,0 @@
-/*
- * synergy -- mouse and keyboard sharing utility
- * Copyright (C) 2016 Symless Inc.
- *
- * This package is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * found in the file LICENSE that should have accompanied this file.
- *
- * This package is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- */
-
-#define TEST_ENV
-
-#include "shared/SerialKey.h"
-
-#include "test/global/gtest.h"
-
-TEST(SerialKeyTests, decode_empty_returnEmptyString)
-{
-	std::string plainText = SerialKey::decode("");
-	EXPECT_EQ(0, plainText.size());
-}
-
-TEST(SerialKeyTests, decode_invalidDigit_returnEmptyString)
-{
-	std::string plainText = SerialKey::decode("MOCKZ");
-	EXPECT_EQ(0, plainText.size());
-}
-
-TEST(SerialKeyTests, decode_validSerial_returnPlainText)
-{
-	std::string plainText = SerialKey::decode("53796E6572677920726F636B7321");
-	EXPECT_EQ("Synergy rocks!", plainText);
-}
-
-TEST(SerialKeyTests, parse_noParty_invalid)
-{
-	SerialKey serial;
-	bool r = serial.parse("MOCK");
-	EXPECT_FALSE(r);
-}
-
-TEST(SerialKeyTests, parse_invalidPartsLenghth_invalid)
-{
-	SerialKey serial;
-	bool r = serial.parse("{Synergy;Rocks}");
-	EXPECT_FALSE(r);
-}
-
-TEST(SerialKeyTests, parse_validV1Serial_valid)
-{
-	SerialKey serial;
-	bool r = serial.parse("{v1;basic;Bob;1;email;company name;0;86400}");
-	EXPECT_EQ(true, r);
-	EXPECT_EQ(kBasic, serial.edition());
-	EXPECT_FALSE(serial.isExpired(0));
-	EXPECT_EQ(true, serial.daysLeft(0));
-	EXPECT_FALSE(serial.isExpiring(1));
-}
-
-TEST(SerialKeyTests, parse_validV2Serial_valid)
-{
-	SerialKey serial;
-	bool r = serial.parse("{v2;trial;pro;Bob;1;email;company name;0;86400}");
-	EXPECT_EQ(true, r);
-	EXPECT_EQ(kPro, serial.edition());
-	EXPECT_FALSE(serial.isExpired(0));
-	EXPECT_EQ(true, serial.daysLeft(0));
-	EXPECT_EQ(true, serial.isExpiring(1));
-	EXPECT_EQ(true, serial.isTrial());
-}
-
-TEST(SerialKeyTests, isExpiring_validV2TrialBasicSerial_returnFalse)
-{
-	// {v2;trial;basic;Bob;1;email;company name;1;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B313B38363430307D");
-	EXPECT_EQ(true, serial.isTrial());
-	EXPECT_FALSE(serial.isExpiring(0));
-	EXPECT_EQ(kBasic, serial.edition());
-}
-
-TEST(SerialKeyTests, isExpiring_expiringV2TrialBasicSerial_returnTrue)
-{
-	// {v2;trial;basic;Bob;1;email;company name;0;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B303B38363430307D");
-	EXPECT_EQ(true, serial.isTrial());
-	EXPECT_EQ(true, serial.isExpiring(1));
-}
-
-TEST(SerialKeyTests, isExpiring_expiredV2TrialBasicSerial_returnFalse)
-{
-	// {v2;trial;basic;Bob;1;email;company name;0;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B303B38363430307D");
-	EXPECT_EQ(true, serial.isTrial());
-	EXPECT_FALSE(serial.isExpiring(86401));
-}
-
-TEST(SerialKeyTests, isExpired_validV2TrialBasicSerial_returnFalse)
-{
-	// {v2;trial;basic;Bob;1;email;company name;0;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B303B38363430307D");
-	EXPECT_EQ(true, serial.isTrial());
-	EXPECT_FALSE(serial.isExpired(0));
-}
-
-TEST(SerialKeyTests, isExpired_expiringV2TrialBasicSerial_returnFalse)
-{
-	// {v2;trial;basic;Bob;1;email;company name;0;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B303B38363430307D");
-	EXPECT_EQ(true, serial.isTrial());
-	EXPECT_FALSE(serial.isExpired(1));
-}
-
-TEST(SerialKeyTests, isExpired_expiredV2TrialBasicSerial_returnTrue)
-{
-	// {v2;trial;basic;Bob;1;email;company name;0;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B303B38363430307D");
-	EXPECT_EQ(true, serial.isTrial());
-	EXPECT_EQ(true, serial.isExpired(86401));
-}
-
-TEST(SerialKeyTests, daysLeft_validExactlyOneDayV2TrialBasicSerial_returnOne)
-{
-	// {v2;trial;basic;Bob;1;email;company name;0;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B303B38363430307D");
-	EXPECT_EQ(1, serial.daysLeft(0));
-}
-
-TEST(SerialKeyTests, daysLeft_validWithinOneDayV2TrialBasicSerial_returnOne)
-{
-	// {v2;trial;basic;Bob;1;email;company name;0;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B303B38363430307D");
-	EXPECT_EQ(1, serial.daysLeft(1));
-}
-
-TEST(SerialKeyTests, daysLeft_expiredV2TrialBasicSerial_returnZero)
-{
-	// {v2;trial;basic;Bob;1;email;company name;0;86400}
-	SerialKey serial("7B76323B747269616C3B62617369633B426F623B313B656D61696C3B636F6D70616E79206E616D653B303B38363430307D");
-	EXPECT_EQ(0, serial.daysLeft(86401));
-}
--- a/src/gui/src/MainWindow.cpp
+++ b/src/gui/src/MainWindow.cpp
@@ -458,10 +458,7 @@
 
 void MainWindow::checkLicense(const QString &line)
 {
-	if (line.contains("trial has expired")) {
-		licenseManager().refresh();
-		raiseActivationDialog();
-	}
+	return;
 }
 
 void MainWindow::checkFingerprint(const QString& line)
@@ -554,11 +551,6 @@
 {
 	SerialKey serialKey = m_LicenseManager->serialKey();
 	time_t currentTime = ::time(0);
-	if (serialKey.isExpired(currentTime)) {
-		if (QDialog::Rejected == raiseActivationDialog()) {
-			return;
-		}
-	}
 
 	bool desktopMode = appConfig().processMode() == Desktop;
 	bool serviceMode = appConfig().processMode() == Service;
@@ -1239,7 +1231,6 @@
 
 void MainWindow::on_m_pActivate_triggered()
 {
-	raiseActivationDialog();
 }
 
 void MainWindow::on_m_pButtonApply_clicked()
@@ -1480,12 +1471,7 @@
 
 void MainWindow::on_windowShown()
 {
-	time_t currentTime = ::time(0);
-	if (!m_AppConfig->activationHasRun()
-			&& ((m_AppConfig->edition() == kUnregistered) ||
-				(m_LicenseManager->serialKey().isExpired(currentTime)))) {
-		raiseActivationDialog();
-	}
+	return;
 }
 
 QString MainWindow::getProfileRootForArg()
